(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{268:function(e,t,i){"use strict";i.r(t);var n={mounted:function(){this.buildTOC()}},a=i(4),o=Object(a.a)(n,function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("main",{},[i("h1",[e._v("Stylus mixins")]),e._v(" "),i("p",[e._v("Generates all styles of Setka's.")]),e._v(" "),i("source-code",[i("code",[e._v("setka()")])]),e._v(" "),i("p",[e._v("Gets size of unit of "),i("nuxt-link",{attrs:{to:"/baseline"}},[e._v("baseline grid")]),e._v(".")],1),e._v(" "),i("source-code",[i("code",[e._v("gu(1)")])]),e._v(" "),i("Header",{attrs:{level:2,name:"media-queries"}},[e._v("Media queries")]),e._v(" "),e._m(0),e._v(" "),i("Header",{attrs:{level:3}},[i("code",[e._v("+media-up(breakpoint)")])]),e._v(" "),i("p",[e._v("Creates media query of at least the minimum breakpoint width. No query for the smallest breakpoint.")]),e._v(" "),i("source-code",{attrs:{height:14}},[i("code",[e._v("+media-up('sm') { ... }\n+media-up('md') { ... }\n+media-up('lg') { ... }\n+media-up('xl') { ... }\n\n// Example\n+media-up('sm')\n    .some-class\n        display: block\n\n// or\n.some-class\n    +media-up('sm')\n        display: block")])]),e._v(" "),i("Header",{attrs:{level:3}},[i("code",[e._v("+media-down(breakpoint)")])]),e._v(" "),i("p",[e._v("Creates media query of at most the maximum breakpoint width. No query for the largest breakpoint.")]),e._v(" "),i("source-code",{attrs:{height:1}},[i("code",[e._v("+media-down('md') { ... }")])]),e._v(" "),i("Header",{attrs:{level:3}},[i("code",[e._v("+media-between(breakpoint)")])]),e._v(" "),i("p",[e._v("Creates media query that spans multiple breakpoint widths.")]),e._v(" "),i("source-code",{attrs:{height:1}},[i("code",[e._v("+media-between('md', 'lg') { ... }")])]),e._v(" "),i("Header",{attrs:{level:3}},[i("code",[e._v("+media-only(breakpoint)")])]),e._v(" "),i("p",[e._v("Creates media query between the breakpoint's minimum and maximum widths. No minimum for the smallest breakpoint, and no maximum for the largest one.")]),e._v(" "),i("source-code",{attrs:{height:1}},[i("code",[e._v("+media-only('md') { ... }")])]),e._v(" "),i("Header",{attrs:{level:2,name:"breakpoint-infix"}},[e._v("breakpoint-infix()")]),e._v(" "),i("p",[e._v("Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.")]),e._v(" "),i("source-code",{attrs:{height:1}},[i("code",[e._v("breakpoint-infix($name, $breakpoints = $grid-breakpoints)")])]),e._v(" "),i("p",[e._v("Examples.")]),e._v(" "),i("source-code",{attrs:{height:5}},[i("code",[i("em",[e._v("breakpoint-infix('xs', (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))")]),e._v('\n// "" (Returns a blank string)\n\n'),i("em",[e._v("breakpoint-infix('sm', (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))")]),e._v('\n// "-sm"\n')])]),e._v(" "),i("Header",{attrs:{level:2,name:"custom-utilities"}},[e._v("Custom utilities")]),e._v(" "),i("p",[e._v("With "),i("code",[e._v("+media-breakpoint-up()")]),e._v(" and "),i("code",[e._v("breakpoint-infix()")]),e._v(" you can create you own responsive utilities. This example shows how standard "),i("nuxt-link",{attrs:{to:"/flex"}},[e._v("flex utilities")]),e._v(" was created.")],1),e._v(" "),i("source-code",{attrs:{height:7}},[i("code",[e._v("for $breakpoint in keys($grid-breakpoints)\n    +media-breakpoint-up($breakpoint)\n      $infix = breakpoint-infix($breakpoint, $grid-breakpoints)\n        .flex{$infix}-row            { flex-direction: row !important; }\n        .flex{$infix}-column         { flex-direction: column !important; }\n        .flex{$infix}-row-reverse    { flex-direction: row-reverse !important; }\n        .flex{$infix}-column-reverse { flex-direction: column-reverse !important; }\n")])]),e._v(" "),e._m(1)],1)},[function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("p",[e._v("Setka gives "),i("a",{attrs:{href:"http://stylus-lang.com/docs/mixins.html#block-mixins",target:"_blank"}},[e._v("block mixins")]),e._v(" to help you with media queries: "),i("code",[e._v("+media-up()")]),e._v(", "),i("code",[e._v("+media-down()")]),e._v(", "),i("code",[e._v("+media-between()")]),e._v(" and "),i("code",[e._v("+media-only()")]),e._v(". They use "),i("code",[e._v("$grid-breakpoints")]),e._v(" hash to retrieve values in pixels.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("It generates a bunch of classes: "),t("code",[this._v(".flex-row")]),this._v(", "),t("code",[this._v(".flex-sm-row")]),this._v(", and so on.")])}],!1,null,null,null);o.options.__file="mixins.vue";t.default=o.exports}}]);