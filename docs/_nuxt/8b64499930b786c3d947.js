(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{283:function(e,t,s){"use strict";s.r(t);var i={head:{title:"Mixins"},mounted:function(){this.buildTOC()}},a=s(4),n=Object(a.a)(i,function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("main",{},[s("h1",[e._v("Stylus mixins")]),e._v(" "),s("p",[e._v("Generates all styles of Setka's.")]),e._v(" "),s("source-code",{attrs:{height:1}},[s("code",{staticClass:"stylus"},[e._v("setka()")])]),e._v(" "),s("p",[e._v("Gets size of unit of "),s("nuxt-link",{attrs:{to:"/baseline"}},[e._v("baseline grid")]),e._v(".")],1),e._v(" "),s("source-code",{attrs:{height:1}},[s("code",{staticClass:"stylus"},[e._v("gu(1)")])]),e._v(" "),s("p",[e._v("Do the same as "),s("nuxt-link",{attrs:{to:"/float#clearfix"}},[e._v(".clearfix")]),e._v(" class.")],1),e._v(" "),s("source-code",{attrs:{height:1}},[s("code",{staticClass:"stylus"},[e._v("clearfix()")])]),e._v(" "),s("Header",{attrs:{level:2,name:"media-queries"}},[e._v("Media queries")]),e._v(" "),e._m(0),e._v(" "),s("Header",{attrs:{level:3}},[s("code",{staticClass:"stylus"},[e._v("+media-up(breakpoint)")])]),e._v(" "),s("p",[e._v("Creates media query of at least the minimum breakpoint width. No query for the smallest breakpoint.")]),e._v(" "),s("source-code",{attrs:{height:14}},[s("code",{staticClass:"stylus"},[e._v("+media-up('sm') { ... }\n+media-up('md') { ... }\n+media-up('lg') { ... }\n+media-up('xl') { ... }\n\n// Example\n+media-up('sm')\n    .some-class\n        display: block\n\n// or\n.some-class\n    +media-up('sm')\n        display: block")])]),e._v(" "),s("Header",{attrs:{level:3}},[s("code",{staticClass:"stylus"},[e._v("+media-down(breakpoint)")])]),e._v(" "),s("p",[e._v("Creates media query of at most the maximum breakpoint width. No query for the largest breakpoint.")]),e._v(" "),s("source-code",{attrs:{height:1}},[s("code",{staticClass:"stylus"},[e._v("+media-down('md') { ... }")])]),e._v(" "),s("Header",{attrs:{level:3}},[s("code",{staticClass:"stylus"},[e._v("+media-between(breakpoint)")])]),e._v(" "),s("p",[e._v("Creates media query that spans multiple breakpoint widths.")]),e._v(" "),s("source-code",{attrs:{height:1}},[s("code",{staticClass:"stylus"},[e._v("+media-between('md', 'lg') { ... }")])]),e._v(" "),s("Header",{attrs:{level:3}},[s("code",{staticClass:"stylus"},[e._v("+media-only(breakpoint)")])]),e._v(" "),s("p",[e._v("Creates media query between the breakpoint's minimum and maximum widths. No minimum for the smallest breakpoint, and no maximum for the largest one.")]),e._v(" "),s("source-code",{attrs:{height:1}},[s("code",{staticClass:"stylus"},[e._v("+media-only('md') { ... }")])]),e._v(" "),s("Header",{attrs:{level:2,name:"breakpoint-infix"}},[e._v("breakpoint-infix()")]),e._v(" "),s("p",[e._v("Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.")]),e._v(" "),s("source-code",{attrs:{height:1}},[s("code",{staticClass:"stylus"},[e._v("breakpoint-infix($name, $breakpoints = $grid-breakpoints)")])]),e._v(" "),s("p",[e._v("Examples.")]),e._v(" "),s("source-code",{attrs:{height:5}},[s("code",{staticClass:"stylus"},[e._v("breakpoint-infix('xs', (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n// \"\" (Returns a blank string)\n\nbreakpoint-infix('sm', (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n// \"-sm\"\n")])]),e._v(" "),s("Header",{attrs:{level:2,name:"custom-utilities"}},[e._v("Build custom utilities")]),e._v(" "),s("p",[e._v("With "),s("code",[e._v("+media-up()")]),e._v(" and "),s("code",[e._v("breakpoint-infix()")]),e._v(" you can create you own responsive utilities. This example shows how standard "),s("nuxt-link",{attrs:{to:"/flex"}},[e._v("flex utilities")]),e._v(" are created.")],1),e._v(" "),s("source-code",{attrs:{height:7}},[s("code",{staticClass:"stylus"},[e._v("for $breakpoint in keys($grid-breakpoints)\n    +media-up($breakpoint)\n      $infix = breakpoint-infix($breakpoint, $grid-breakpoints)\n        .flex{$infix}-row            { flex-direction: row !important; }\n        .flex{$infix}-column         { flex-direction: column !important; }\n        .flex{$infix}-row-reverse    { flex-direction: row-reverse !important; }\n        .flex{$infix}-column-reverse { flex-direction: column-reverse !important; }\n")])]),e._v(" "),e._m(1)],1)},[function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("Setka gives "),s("a",{attrs:{href:"http://stylus-lang.com/docs/mixins.html#block-mixins",target:"_blank"}},[e._v("block mixins")]),e._v(" to help you with media queries: "),s("code",[e._v("+media-up()")]),e._v(", "),s("code",[e._v("+media-down()")]),e._v(", "),s("code",[e._v("+media-between()")]),e._v(" and "),s("code",[e._v("+media-only()")]),e._v(". They use "),s("code",[e._v("$grid-breakpoints")]),e._v(" hash to retrieve values in pixels.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("It generates a bunch of classes: "),t("code",[this._v(".flex-row")]),this._v(", "),t("code",[this._v(".flex-sm-row")]),this._v(", "),t("code",[this._v(".flex-md-row")]),this._v(", and so on.")])}],!1,null,null,null);n.options.__file="mixins.vue";t.default=n.exports}}]);