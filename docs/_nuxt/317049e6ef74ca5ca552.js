(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{296:function(e,t,n){"use strict";n.r(t);var r={head:{title:"Baseline grid"}},o=n(7),component=Object(o.a)(r,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("main",{},[n("h1",[e._v("Baseline grid")]),e._v(" "),n("p",[e._v("Setka library utilizes baseline grid for line heights, spacing and overall vertical rythm. It is optional, you can left it.")]),e._v(" "),e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),n("Header",{attrs:{level:2,name:"grid-units"}},[e._v("Grid units")]),e._v(" "),n("p",[n("em",[e._v("Grid unit")]),e._v(" is a size of step of baseline grid. "),n("nuxt-link",{attrs:{to:"/spacing"}},[e._v("Spacing classes")]),e._v(" by default use grid units to calculate their margins. Value of grid unit can be get from CSS variable "),n("code",[e._v("--grid-unit")]),e._v(" or function "),n("code",[e._v("gu(Number)")]),e._v(" in Stylus. Formula of grid unit size is: "),n("code",[e._v("calc(var(--line-height) / var(--grid-steps))")]),e._v(".\n        ")],1),e._v(" "),n("p",[e._v("If you choose to use baseline grid, then use grid units in CSS rules like this:")]),e._v(" "),n("source-code",{attrs:{height:3}},[n("code",{staticClass:"css"},[e._v(".some-class {\n  margin-bottom: calc(var(--grid-unit) * 8);\n}")]),e._v(" "),n("code",{staticClass:"stylus",attrs:{slot:"stylus"},slot:"stylus"},[e._v(".some-class\n  margin-bottom: gu(8)")])]),e._v(" "),n("p",[e._v("Example of using grid units:")]),e._v(" "),n("source-code",{attrs:{height:6}},[n("code",{staticClass:"css"},[e._v("h1 {\n  font-size: 2.75rem;\n  line-height: calc(var(--grid-unit) * 4);\n  margin-top: calc(var(--grid-unit) * 4);\n  margin-bottom: calc(var(--grid-unit) * 4);\n}")]),e._v(" "),n("code",{staticClass:"stylus",attrs:{slot:"stylus"},slot:"stylus"},[e._v("h1\n  font-size: 2.75rem\n  line-height: gu(4)\n  margin-top: gu(4)\n  margin-bottom: gu(4)")])])],1)}),[function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Baseline grid originates from number of steps (2 by default) per one line-height of body text. It is regulated by "),t("code",[this._v("--grid-steps")]),this._v(" and "),t("code",[this._v("--line-height")]),this._v(" variables. I recommend use at least 2 steps or else you won't have enough options for choosing line heights.")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"grid-12"},[n("div",{staticClass:"col-6"},[n("div",{staticClass:"bg-1 p-1 show-grid"},[n("h3",{staticClass:"my-0 bg-2"},[e._v("Example header")]),e._v(" "),n("p",{staticClass:"bg-2 mb-0"},[e._v("\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit. Cumque voluptatibus neque asperiores rerum officia non illo. Incidunt sit eveniet perspiciatis\n                    ")])])]),e._v(" "),n("div",{staticClass:"col-6"},[n("p",{staticClass:"mt-1"},[e._v("In this example header has "),n("code",[e._v("line-height")]),e._v(" of 3 grid units. And body text has "),n("code",[e._v("line-height")]),e._v(" of 2 grid units.")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Baseline grid is also responsive, so spacings between blocks too. Try to narrow window under 576px and you will see in the example above that not only size of font will become smaller, but "),t("code",[this._v("line-height")]),this._v(" and spacings too.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("When setting baseline grid, make sure that "),t("code",[this._v("(--line-height / --grid-steps)")]),this._v(" is round number. Float number cause problems because of rounding. For example, by default "),t("code",[this._v("--line-height")]),this._v(" variable is 20px. Then grid unit size will be "),t("em",[this._v("(20px / 2) = 10px")]),this._v(".\n        ")])}],!1,null,null,null);t.default=component.exports}}]);